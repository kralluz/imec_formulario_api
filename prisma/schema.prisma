generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  COMMON
}

model User {
  id             String          @id @default(uuid()) @db.Uuid
  name           String
  email          String          @unique
  password       String
  role           Role            @default(COMMON)
  createdAt      DateTime        @default(now()) @map("created_at")
  questionnaires Questionnaire[]
}

model Questionnaire {
  id        String     @id @default(uuid()) @db.Uuid
  title     String
  icon      String?
  userId    String     @map("user_id") @db.Uuid
  createdAt DateTime   @default(now()) @map("created_at")
  user      User       @relation(fields: [userId], references: [id])
  questions Question[]
  analytics Analytics?
  pdfFiles  PdfFile[]
}

model Question {
  id               String        @id @default(uuid()) @db.Uuid
  questionnaireId  String        @map("questionnaire_id") @db.Uuid
  parentQuestionId String?       @map("parent_question_id") @db.Uuid
  triggerValue     String?       @map("trigger_value")
  orderIndex       Int           @map("order_index")
  text             String
  type             String
  createdAt        DateTime      @default(now()) @map("created_at")
  questionnaire    Questionnaire @relation(fields: [questionnaireId], references: [id])
  parentQuestion   Question?     @relation("QuestionHierarchy", fields: [parentQuestionId], references: [id])
  childQuestions   Question[]    @relation("QuestionHierarchy")
  options          Option[]
}

model Option {
  id         String   @id @default(uuid()) @db.Uuid
  questionId String   @map("question_id") @db.Uuid
  label      String?
  value      String?
  createdAt  DateTime @default(now()) @map("created_at")
  question   Question @relation(fields: [questionId], references: [id])
}

model Analytics {
  id                  String        @id @default(uuid()) @db.Uuid
  questionnaireId     String        @unique @map("questionnaire_id") @db.Uuid
  examFrequency       Int?
  averageResponseTime Decimal?      @map("average_response_time")
  otherIndicators     String?       @map("other_indicators")
  createdAt           DateTime      @default(now()) @map("created_at")
  questionnaire       Questionnaire @relation(fields: [questionnaireId], references: [id])
}

model PdfFile {
  id              String        @id @default(uuid()) @db.Uuid
  questionnaireId String        @map("questionnaire_id") @db.Uuid
  filePath        String        @map("file_path")
  signatureHash   String?       @map("signature_hash")
  signatureAt     DateTime?     @map("signature_at")
  createdAt       DateTime      @default(now()) @map("created_at")
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
}

model AuditLog {
  id        String   @id @default(uuid()) @db.Uuid
  tableName String   @map("table_name")
  recordId  String?  @map("record_id")
  action    String
  data      Json?
  createdAt DateTime @default(now()) @map("created_at")
}
